openapi: 3.0.3
info:
  title: KarenFlix API
  description: API para la gestión de usuarios, categorías, películas y reseñas con autenticación JWT.
  version: 1.0.0
servers:
  - url: https://proyecto-ex-press-backend-s1-santoyo-juan-diaz-vladi-mqivr70wz.vercel.app
    description: Servidor en producción


tags:
  - name: Autenticación
    description: Rutas para registro e inicio de sesión
  - name: Usuarios
    description: CRUD de usuarios (solo admin para eliminar)
  - name: Categorías
    description: CRUD de categorías (solo admin)
  - name: Películas
    description: CRUD de películas (solo admin)
  - name: Reseñas
    description: CRUD de reseñas y likes/dislikes

paths:
  /auth/register:
    post:
      tags:
        - Autenticación
      summary: Registro de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                nombre:
                  type: string
                contrasena:
                  type: string
                rol:
                  type: string
                  enum: [usuario, administrador]
              required:
                - correo
                - nombre
                - contrasena
      responses:
        "201":
          description: Usuario registrado con éxito
        "400":
          description: Datos inválidos o correo duplicado

  /auth/login:
    post:
      tags:
        - Autenticación
      summary: Inicio de sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                contrasena:
                  type: string
              required:
                - correo
                - contrasena
      responses:
        "200":
          description: Retorna token JWT
        "400":
          description: Credenciales inválidas

  /users:
    get:
      tags:
        - Usuarios
      summary: Obtener todos los usuarios
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de usuarios
    post:
      tags:
        - Usuarios
      summary: Crear usuario (admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                nombre:
                  type: string
                contrasena:
                  type: string
                rol:
                  type: string
                  enum: [usuario, administrador]
      responses:
        "201":
          description: Usuario creado con éxito
        "400":
          description: Datos inválidos

  /users/{id}:
    put:
      tags:
        - Usuarios
      summary: Actualizar usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                nombre:
                  type: string
                direccion:
                  type: string
      responses:
        "200":
          description: Usuario actualizado con éxito
        "404":
          description: Usuario no encontrado
    delete:
      tags:
        - Usuarios
      summary: Eliminar usuario (admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado
        "404":
          description: Usuario no encontrado

  /categories:
    get:
      tags:
        - Categorías
      summary: Obtener todas las categorías
      responses:
        "200":
          description: Lista de categorías
    post:
      tags:
        - Categorías
      summary: Crear categoría (admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                descripcion:
                  type: string
      responses:
        "201":
          description: Categoría creada con éxito

  /categories/{id}:
    put:
      tags:
        - Categorías
      summary: Actualizar categoría (admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                descripcion:
                  type: string
      responses:
        "200":
          description: Categoría actualizada
    delete:
      tags:
        - Categorías
      summary: Eliminar categoría (admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Categoría eliminada

  /movies:
    get:
      tags:
        - Películas
      summary: Obtener todas las películas
      responses:
        "200":
          description: Lista de películas
    post:
      tags:
        - Películas
      summary: Crear película (admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                categoriaId:
                  type: string
                portada:
                  type: string
      responses:
        "201":
          description: Película creada con éxito

  /movies/{id}:
    put:
      tags:
        - Películas
      summary: Actualizar película (admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                categoriaId:
                  type: string
                portada:
                  type: string
      responses:
        "200":
          description: Película actualizada
    delete:
      tags:
        - Películas
      summary: Eliminar película (admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Película eliminada

  /reviews:
    get:
      tags:
        - Reseñas
      summary: Obtener todas las reseñas (admin)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de reseñas
    post:
      tags:
        - Reseñas
      summary: Crear reseña (usuario)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                peliculaId:
                  type: string
                titulo:
                  type: string
                comentario:
                  type: string
                calificacion:
                  type: number
      responses:
        "201":
          description: Reseña creada con éxito

  /reviews/{id}:
    put:
      tags:
        - Reseñas
      summary: Actualizar reseña (solo autor)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                comentario:
                  type: string
                calificacion:
                  type: number
      responses:
        "200":
          description: Reseña actualizada
    delete:
      tags:
        - Reseñas
      summary: Eliminar reseña (autor o admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Reseña eliminada

  /reviews/{id}/like:
    post:
      tags:
        - Reseñas
      summary: Dar like a reseña
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Like actualizado

  /reviews/{id}/dislike:
    post:
      tags:
        - Reseñas
      summary: Dar dislike a reseña
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dislike actualizado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
