openapi: 3.0.0
info:
  title: KarenFlix API
  version: 1.0.0
  description: API para la aplicación KarenFlix con gestión de usuarios, categorías, películas y reseñas.

servers:
  - url: http://localhost:3000
    description: Servidor Local

tags:
  - name: Auth
    description: Autenticación y JWT
  - name: Usuarios
    description: Gestión de usuarios
  - name: Categorías
    description: Gestión de categorías
  - name: Películas
    description: Gestión de películas
  - name: Reseñas
    description: CRUD de reseñas y sistema de ranking

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Usuario:
      type: object
      properties:
        _id:
          type: string
        correo:
          type: string
        nombre:
          type: string
        direccion:
          type: string
        rol:
          type: string
          enum: [usuario, administrador]
        createdAt:
          type: string
          format: date-time
          
    UserUpdate:
      type: object
      properties:
        correo:
          type: string
          format: email
          example: "nuevo@mail.com"
        nombre:
          type: string
          example: "Nuevo Nombre"
        direccion:
          type: string
          example: "Calle Falsa 123"
        rol:
          type: string
          enum: [usuario, administrador]
          example: "usuario"

    Categoria:
      type: object
      properties:
        _id:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        createdAt:
          type: string
          format: date-time

    Pelicula:
      type: object
      properties:
        _id:
          type: string
        nombre:
          type: string
        categoriaId:
          type: string
        portada:
          type: string
        createdAt:
          type: string
          format: date-time

    Resena:
      type: object
      properties:
        _id:
          type: string
        peliculaId:
          type: string
        usuarioId:
          type: string
        titulo:
          type: string
        comentario:
          type: string
        calificacion:
          type: number
        likes:
          type: array
          items:
            type: string
        dislikes:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time

security:
  - bearerAuth: []

paths:

  /auth/login:
    post:
      tags: [Auth]
      summary: Inicia sesión y obtiene un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                contrasena:
                  type: string
      responses:
        "200":
          description: Token JWT devuelto

  /users:
    post:
      tags: [Usuarios]
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "201":
          description: Usuario creado
    get:
      tags: [Usuarios]
      summary: Lista todos los usuarios
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de usuarios

/users/{id}:
    put:
      summary: Actualiza un usuario existente
      description: Permite actualizar datos de un usuario, los campos son opcionales.
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: Usuario actualizado correctamente
        "400":
          description: Error de validación
        "404":
          description: Usuario no encontrado
    delete:
      tags: [Usuarios]
      summary: Elimina un usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado

  /categories:
    post:
      tags: [Categorías]
      summary: Crea una nueva categoría (solo admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Categoria"
      responses:
        "201":
          description: Categoría creada
    get:
      tags: [Categorías]
      summary: Lista todas las categorías
      responses:
        "200":
          description: Lista de categorías

  /categories/{id}:
    put:
      tags: [Categorías]
      summary: Actualiza una categoría
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Categoría actualizada
    delete:
      tags: [Categorías]
      summary: Elimina una categoría
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Categoría eliminada

  /movies:
    post:
      tags: [Películas]
      summary: Crea una nueva película
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pelicula"
      responses:
        "201":
          description: Película creada
    get:
      tags: [Películas]
      summary: Lista todas las películas
      responses:
        "200":
          description: Lista de películas

  /movies/{id}:
    put:
      tags: [Películas]
      summary: Actualiza una película
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Película actualizada
    delete:
      tags: [Películas]
      summary: Elimina una película
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Película eliminada

  /reviews:
    post:
      tags: [Reseñas]
      summary: Crea una reseña
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resena"
      responses:
        "201":
          description: Reseña creada
    get:
      tags: [Reseñas]
      summary: Lista todas las reseñas (solo admin)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de reseñas

  /reviews/{id}:
    put:
      tags: [Reseñas]
      summary: Actualiza una reseña
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Reseña actualizada
    delete:
      tags: [Reseñas]
      summary: Elimina una reseña
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Reseña eliminada

  /reviews/{id}/like:
    post:
      tags: [Reseñas]
      summary: Da like a una reseña
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Like actualizado

  /reviews/{id}/dislike:
    post:
      tags: [Reseñas]
      summary: Da dislike a una reseña
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dislike actualizado

  /reviews/movie/{peliculaId}:
    get:
      tags: [Reseñas]
      summary: Obtiene reseñas por película
      parameters:
        - in: path
          name: peliculaId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de reseñas por película
